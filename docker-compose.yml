services:
  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 15673:15672
      - 5673:5672 
    volumes:
      - ./microservices-banking/.docker/rabbitmq/.rabbitmq_data:/var/lib/rabbitmq/mnesia
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    env_file:
      - ./microservices-banking/.env

  postgres-transactions:
    image: postgres:13
    container_name: postgres-transactions
    environment:
      POSTGRES_USER: "transactions_user"
      POSTGRES_PASSWORD: "transactions_password"
      POSTGRES_DB: "transactions_db"
    ports:
      - 5432:5432
    volumes:
      - ./microservices-banking/.docker/postgresql/transactions-data:/var/lib/postgresql/data
      - ./microservices-banking/.docker/postgresql/transactions-init-scripts:/docker-entrypoint-initdb.d
    env_file:
      - ./microservices-banking/.env

  postgres-customers:
    image: postgres:13
    container_name: postgres-customers
    environment:
      POSTGRES_USER: "customers_user"
      POSTGRES_PASSWORD: "customers_password"
      POSTGRES_DB: "customers_db"

    ports:
      - 5433:5432
    volumes:
      - ./microservices-banking/.docker/postgresql/clients-data:/var/lib/postgresql/data
      - ./microservices-banking/.docker/postgresql/clients-init-scripts:/docker-entrypoint-initdb.d
    env_file:
      - ./microservices-banking/.env

  transactions:
    container_name: transactions
    build:
      context: "./microservices-banking/transactions"
      dockerfile: Dockerfile
    command: npm run start:dev
    depends_on:
      - rabbitmq
      - postgres-transactions
    ports:
      - 3000:3000
    volumes:
      - ./microservices-banking/transactions:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./microservices-banking/transactions/.env

  customers:
    container_name: customers
    build:
      context: "./microservices-banking/customers"
      dockerfile: Dockerfile
    command: npm run start:dev
    depends_on:
      - rabbitmq
      - postgres-customers
    ports:
      - 3001:3001
    volumes:
      - ./microservices-banking/customers:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./microservices-banking/customers/.env

  api-getway:
    container_name: api-getway
    build:
      context: "./microservices-banking/api-gateway"
      dockerfile: Dockerfile
    command: npm run start:dev
    depends_on:
      - rabbitmq
    ports:
      - 3002:3002
    volumes:  
      - ./microservices-banking/api-gateway:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./microservices-banking/api-gateway/.env


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:10.0.3
    container_name: grafana
    ports:
      - "3010:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always
    networks:
      - monitoring

networks:
  monitoring:

volumes:
  grafana_data: